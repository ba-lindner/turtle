openapi: 3.1.1
info:
  title: Turtle
  description: API for turtle graphics webserver
  version: 0.1.0
tags:
  - name: examples
    description: view some example programs
  - name: programming
    description: write your own program
  - name: running
    description: let the turtle draw!
paths:
  # examples
  /examples:
    get:
      tags: [examples]
      summary: list available examples
      operationId: listExamples
      responses:
        '200':
          description: List of examples
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ExampleList'
  # programming
  /prog:
    post:
      tags: [programming]
      summary: Initialise a new program
      operationId: initProg
      responses:
        '204':
          description: program initialised
  /prog/{id}:
    get:
      tags: [programming]
      summary: get info about program
      operationId: getProgMeta
    put:
      tags: [programming]
      summary: change info about program
      operationId: setProgMeta
  /prog/{id}/check:
    post:
      tags: [programming]
      summary: check program code
      operationId: checkProg
  /prog/{id}/code:
    get:
      tags: [programming]
      summary: get code of program
      operationId: getProgCode
    put:
      tags: [programming]
      summary: set code of program
      operationId: setProgCode
  # running
  ## new run
  /examples/{name}/run:
    post:
      tags: [running]
      summary: run an example
      operationId: startRunExample
  /prog/{id}/run:
    post:
      tags: [running]
      summary: start a program
      operationId: startRun
  ## interpreter
  /run/{id}/window:
    get:
      tags: [running]
      summary: poll for events from run
      operationId: getRunWindow
  /run/{id}/events:
    post:
      tags: [running]
      summary: report user input
      operationId: reportEvent
  /run/{id}/stop: 
    post:
      tags: [running]
      summary: end a run
      operationId: stopRun
  ## debugger
  /run/{id}/debug:
    post:
      tags: [running]
      summary: execute debug command
      operationId: execCmd
components:
  schemas:
    Example:
      type: object
      required:
      - name
      - summary
      - description
      - code
      - group
      properties:
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        code:
          type: string
        group:
          type: string
          enum:
          - Basic examples
          - Advanced examples
          - Fractals
          - Feature showcases
    ExampleList:
      type: array
      items:
        $ref: '#/components/schemas/Example'